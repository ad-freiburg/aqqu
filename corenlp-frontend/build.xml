<project name="corenlp-frontend" default="dist" basedir=".">
    <description>
        simple example build file
    </description>
    <!-- set global properties for this build -->
    <property name="src" location="src"/>
    <property name="build" location="build"/>
    <property name="dist" location="dist"/>
    <property name="resources" location="resources"/>
    <property file="build.properties"/>
    <taskdef resource="net/sf/antcontrib/antlib.xml"/>

    <!--This special tasks installs ant-contrib.jar  !-->
    <target name="bootstrap">
        <mkdir dir="${user.home}/.ant/lib"/>
        <get dest="${user.home}/.ant/lib/ant-contrib.jar" src="http://search.maven.org/remotecontent?filepath=ant-contrib/ant-contrib/1.0b3/ant-contrib-1.0b3.jar"/>
    </target>

    <path id="classpath">
      <fileset dir="${basedir}/${corenlp-dir}">
            <include name="*.jar"/>
        </fileset>
    </path>

    <target name="init">
        <!-- Create the time stamp -->
        <tstamp/>
        <!-- Create the build directory structure used by compile -->
        <mkdir dir="${build}"/>
    </target>

    <target name="compile" depends="init"
            description="compile the source ">
        <!-- Compile the java code from ${src} into ${build} -->
        <javac debug="true" destdir="${build}">
            <src path="${src}"/>
            <classpath refid="classpath"/>
        </javac>
    </target>

    <target name="dist" depends="compile"
            description="generate the distribution">
        <!-- Create the distribution directory -->
        <delete dir="${dist}"/>
        <mkdir dir="${dist}/lib"/>

        <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
        <jar jarfile="${dist}/lib/corenlp-frontend-${DSTAMP}.jar" basedir="${build}"/>
    </target>

    <target name="clean"
            description="clean up">
        <!-- Delete the ${build} and ${dist} directory trees -->
        <delete dir="${build}"/>
        <delete dir="${dist}"/>
    </target>

    <target name="run">
        <java classname="CoreNLPServer" fork="yes">
            <classpath refid="classpath"/>
            <classpath>
                <fileset dir="dist/lib">
                    <include name="*.jar"/>
                </fileset>
            </classpath>
            <jvmarg value="-Djava.util.logging.config.file=logging.properties"/>
            <arg value="4000"/>
        </java>
    </target>

    <target name="kill-parallel">
      <exec executable="pkill">
        <arg value="-f"/>
        <arg value="CoreNLPServer"/>
      </exec>
    </target>

    <target name="run-parallel">
        <for param="port" list="4000,4001,4002,4003,4004,4005,4006,4007">
            <sequential>
              <java classname="CoreNLPServer" fork="yes" spawn="true">
                    <classpath refid="classpath"/>
                    <classpath>
                        <fileset dir="dist/lib">
                            <include name="*.jar"/>
                        </fileset>
                    </classpath>
                    <jvmarg value="-Djava.util.logging.config.file=logging.properties"/>
                    <arg value="@{port}"/>
                </java>
                <echo message="Spawned CoreNLP server on port: @{port}"/>
            </sequential>
        </for>
    </target>

</project>
